name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: binary-linux
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: binary-macos
          # Uncomment if you want Windows builds
          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
          #   artifact_name: binary-windows.exe

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      
      - name: Build Release
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            binary-linux/*
            binary-macos/*
            # binary-windows.exe/*  # Uncomment if you want Windows releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 