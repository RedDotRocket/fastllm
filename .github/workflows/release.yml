name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # CPU builds
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: fastllm-cpu-linux
            features: "cpu"
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: fastllm-cpu-macos
            features: "cpu"
          # GPU builds
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: fastllm-cuda-linux
            features: "cuda"
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: fastllm-metal-macos
            features: "metal"

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install CUDA (Only for CUDA Builds)
        if: matrix.features == 'cuda'
        uses: Jimver/cuda-toolkit@v0.2.21
        with:
          cuda: '12.5.0'

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Build Release (Correct Feature Flags)
        run: cargo build -vv --release --target ${{ matrix.target }} --no-default-features --features ${{ matrix.features }}

      - name: Prepare artifact
        run: |
          mkdir -p artifacts
          cp target/${{ matrix.target }}/release/fastllm artifacts/${{ matrix.artifact_name }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: artifacts/${{ matrix.artifact_name }}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
