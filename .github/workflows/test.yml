name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Check clippy
        run: cargo clippy -- -D warnings

      - name: Run tests
        run: cargo test

  build-cpu:
    name: Build (CPU)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --verbose --features cpu

  build-cuda:
    name: Build (CUDA)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install Fake CUDA Paths
        run: |
          mkdir -p /usr/local/cuda/bin
          mkdir -p /usr/local/cuda/lib64
          touch /usr/local/cuda/bin/nvcc  # Fake nvcc binary
          chmod +x /usr/local/cuda/bin/nvcc
          echo "export PATH=/usr/local/cuda/bin:$PATH" >> $GITHUB_ENV
          echo "export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "CUDA_PATH=/usr/local/cuda" >> $GITHUB_ENV
          echo "CUDA_ROOT=/usr/local/cuda" >> $GITHUB_ENV
          echo "CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda" >> $GITHUB_ENV

      - name: Skip `nvidia-smi` Check
        run: echo "BINDGEN_CUDA_NOSMI=1" >> $GITHUB_ENV

      - name: Build
        run: cargo build --verbose --no-default-features --features cuda


  build-macos-metal:
    name: Build (MacOS Metal)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install Metal dependencies
        run: |
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin
          echo "Using Metal API for Apple GPUs"

      - name: Build
        run: cargo build --verbose --no-default-features --features metal
